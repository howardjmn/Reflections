How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    When the behavior of the page is not what is expected the reason is most likely a change to the code.  'Diff' makes is easy to examine the changes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    First I check if anyone else has changed the file.  If that doesn't help, I'd test progressively earlier versions to determine when a problem was introduced.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:   - Logical break points
            - Commits of working versions of code

    Cons:   - You could forget to commit at appropriate times

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is geared toward code, where a web page or project almost always consists of multiple related files.  Other systems are less likely to require management of multiple related files.

How can you use the commands git log and git diff to view the history of files?

    The log shows you timestamps, authors, and commit ids.  Diff shows the changes the were committed between the first commit ID and last commit ID.

How might using version control make you more confident to make changes that
could break something?

    If the changes cause problems you can always get back to a commit that doesn't have the changes.

Now that you have your workspace set up, what do you want to try using Git for?

     Maintaining my code.
